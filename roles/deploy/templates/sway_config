# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key
set $mod Mod4

# Define variables corresponding to keyboard letters
# We use keyboard to have a configuration independent from the keyboard layout
# Use `xev` to get the keycode of a key
# TODO : maybe replace xev by a wayland-native equivalent ?
# All variable names correspond to the qwerty lafayette position

set $minus 20

set $q 24
set $w 25
set $e 26
set $r 27
set $t 28

set $u 30
set $i 31
set $o 32
set $p 33

set $a 38
set $s 39
set $d 40
set $f 41
set $g 42
set $left 43
set $down 44
set $up 45
set $right 46
# TODO : rename those when needed
# set $â˜… 47
# set $' 48

set $z 52
set $x 53
set $c 54
set $v 55
set $b 56

set $return 36
set $space 65
set $escape 9
set $ctrl CTRL

set $1 10
set $2 11
set $3 12
set $4 13
set $5 14
set $6 15
set $7 16
set $8 17
set $9 18
set $0 19
# Your preferred terminal emulator
set $term x-terminal-emulator
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
  xkb_layout  "fr"
  xkb_variant "lafayette"
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindcode $mod+$return exec $term

    # Kill focused window
    bindcode $mod+Shift+$q kill

    # Start your launcher
    bindcode $mod+$d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindcode $mod+Shift+$c reload

    # Exit sway (logs you out of your Wayland session)
    bindcode $mod+Shift+$e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindcode $mod+$left focus left
    bindcode $mod+$down focus down
    bindcode $mod+$up focus up
    bindcode $mod+$right focus right

    # Move the focused window with the same, but add Shift
    bindcode $mod+Shift+$left move left
    bindcode $mod+Shift+$down move down
    bindcode $mod+Shift+$up move up
    bindcode $mod+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindcode $mod+$1 workspace 1
    bindcode $mod+$2 workspace 2
    bindcode $mod+$3 workspace 3
    bindcode $mod+$4 workspace 4
    bindcode $mod+$5 workspace 5
    bindcode $mod+$6 workspace 6
    bindcode $mod+$7 workspace 7
    bindcode $mod+$8 workspace 8
    bindcode $mod+$9 workspace 9
    bindcode $mod+$0 workspace 10
    # Move focused container to workspace
    bindcode $mod+Shift+$1 move container to workspace 1
    bindcode $mod+Shift+$2 move container to workspace 2
    bindcode $mod+Shift+$3 move container to workspace 3
    bindcode $mod+Shift+$4 move container to workspace 4
    bindcode $mod+Shift+$5 move container to workspace 5
    bindcode $mod+Shift+$6 move container to workspace 6
    bindcode $mod+Shift+$7 move container to workspace 7
    bindcode $mod+Shift+$8 move container to workspace 8
    bindcode $mod+Shift+$9 move container to workspace 9
    bindcode $mod+Shift+$0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindcode $mod+$b splith
    bindcode $mod+$v splitv

    # Switch the current container between different layout styles
    bindcode $mod+$s layout stacking
    bindcode $mod+$w layout tabbed
    bindcode $mod+$e layout toggle split

    # Make the current focus fullscreen
    bindcode $mod+$f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindcode $mod+Shift+$space floating toggle

    # Swap focus between the tiling area and the floating area
    bindcode $mod+$space focus mode_toggle

    # Move focus to the parent container
    bindcode $mod+$a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindcode $mod+Shift+$minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindcode $mod+$minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindcode $left resize shrink width 10px
    bindcode $down resize grow height 10px
    bindcode $up resize shrink height 10px
    bindcode $right resize grow width 10px

    # Return to default mode
    bindcode $return mode "default"
    bindcode $escape mode "default"
}
bindcode $mod+$r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*
