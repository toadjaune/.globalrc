### Package manager

- name: Install graphical packages (Debian)
  apt:
    cache_valid_time: 86400 # 1 day
    name:
      # i3-related
      - i3        # Tiling window manager
      - feh       # Display desktop background image
      - arandr    # Tool to generate xrandr configurations
      - dunst     # Notification daemon
      - redshift  # Adapt screen spectrum to the current day time
      - xclip     # interact with X clipboard from cli

      # sway/wayland related
      - sway                  # Tiling window manager
      - swaylock              # trigger wayland lockscreen
      - rofi                  # Program launcher
      - grim                  # Take a screenshot
      - slurp                 # Select a screen area, to pass to grim
      - wl-clipboard          # Interact with wayland clipboard (includes wl-copy)
      - waybar                # Nice-looking bar
      - fonts-font-awesome    # Font for waybar icons
      - gir1.2-playerctl-2.0  # used by the mediaplayer.py script, to display currently playing conten
      - x11-apps              # xeyes allows to know easily if a program is running through XWayland or not
      - xdotool               # input text as if typed from the user

      # alacritty
      # TODO : there isn't an official deb package for now, only a ppa. See what we can do.

      # graphical theme
      - adwaita-qt

  become: true
  when: have_root and ansible_os_family == "Debian"

- name: Install graphical packages (RedHat)
  dnf:
    name:
      # i3-related
      - i3
      - rofi
      - feh
      - arandr
      - numlockx
      - scrot
      - dunst
      - redshift
      - xclip
      - xdotool

      # alacritty
      - alacritty

      # graphical theme
      - adwaita-qt

      # nmtui is a terminal graphical interface to NetworkManager
      # TODO : Find the equivalent debian and arch packages (seems installed by default on Ubuntu and Manjaro)
      - NetworkManager-tui

  become: true
  when: have_root and ansible_os_family == "RedHat"

- name: Install graphical packages (Archlinux)
  pacman:
    name:
      # sway/wayland related
      - sway
      - swaylock
      - rofi
      - grim
      - slurp
      - wl-clipboard
      - waybar
      - otf-font-awesome
      # - gir1.2-playerctl-2.0 # TODO
      - xorg-xeyes
      - xorg-xwayland # NB : not installed by default on arch
      - xdotool

      # alacritty
      - alacritty

      # graphical theme
      # - adwaita-qt #TODO

  become: true
  when: have_root and ansible_os_family == "Archlinux"

### Keyboard layouts ###

- name: Install lxml with pip3
  pip:
    name: lxml
    executable: pip3 # Should not be required, but I'd rather make sure
  become: true
  when: have_root | bool

- name: Install lafayette keyboard layout
  script: "{{ remote_directory }}/files/keyboards/lafayette_linux_v0.6.1.py"
  changed_when: false
  become: true
  when: have_root | bool

# Maybe for debian, configuring this through debconf would be cleaner
# However I tried, and it was very annoying :
# * updating the debconf database did not trigger anything
#   * keyboard-configuration/layoutcode
#   * keyboard-configuration/variantcode
# * even manually triggering its reconfiguration with `dpkg-reconfigure keyboard-configuration -f noninteractive`
#   does regenerate initramfs but without changing /etc/default/keyboard
#
# TODO: See if we can use systemd commands for debian too

# - name: Configure XKBLAYOUT in /etc/default/keyboard (Debian)
#   lineinfile:
#     path: /etc/default/keyboard
#     line: 'XKBLAYOUT="{{ keyboard_layout }}"'
#     regexp: 'XKBLAYOUT=".*"'
#   become: true
#   when: (have_root | bool) and ansible_os_family == "Debian"
#   notify: keyboard_config
#
# - name: Configure XKBVARIANT in /etc/default/keyboard (Debian)
#   lineinfile:
#     path: /etc/default/keyboard
#     line: 'XKBVARIANT="{{ keyboard_variant }}"'
#     regexp: 'XKBVARIANT=".*"'
#   become: true
#   when: (have_root | bool) and ansible_os_family == "Debian"
#   notify: keyboard_config

# generic systemd configuration
# * https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/basic-system-configuration/System_Locale_and_Keyboard_Configuration/
# * https://github.com/systemd/systemd/issues/6403 -> bug preventing using lafayette in VC ?

- name: Get previous keyboard layout configuration
  command: "localectl status"
  become: true
  when: have_root | bool
  changed_when: false # This command only reads state
  register: keyboard_layout_before

- name: Configure virtual console layout to vanilla qwerty
  command: "localectl --no-convert set-keymap us"
  become: true
  when: have_root | bool
  changed_when: false # Sadly, we can't detect changes with command return

- name: Configure X keyboard layout to lafayette
  command: "localectl --no-convert set-x11-keymap {{ keyboard_layout }} '' {{ keyboard_variant }}"
  become: true
  when: have_root | bool
  changed_when: false # Sadly, we can't detect changes with command return

- name: Get new keyboard layout configuration
  command: "localectl status"
  become: true
  when: have_root | bool
  changed_when: keyboard_layout_before.stdout != keyboard_layout_after.stdout
  register: keyboard_layout_after
  notify: keyboard_config

### Fonts ###

- name: Create font-related directories
  file:
    state:  directory
    dest:   "{{ item }}"
  loop:
    - "{{ remote_directory }}/font_archives"
    - "{{ remote_directory }}/fonts"
    - "{{ ansible_user_dir }}/.local/share/fonts"

- name: Include custom fonts directory
  file:
    state:  link
    src:    "{{ remote_directory }}/fonts/"
    dest:   "{{ ansible_user_dir }}/.local/share/fonts/globalrc_fonts"

# TODO : Mention it in README ?
# These fonts are required by :
# - vim-airline
# - vim-devicons
# - vim-nerdtree-syntax-highlight
- name: Download/extract extra fonts
  include_tasks: font.yml
  loop_control:
    loop_var: font_url
  loop:
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v2.0.0/UbuntuMono.zip

### Alacritty ###

- name: Load alacritty config via .config/alacritty.yml
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/alacritty.yml"
    dest:   "{{ ansible_user_dir }}/.config/alacritty.yml"

### Graphical environment Themes ###

# See : https://www.reddit.com/r/archlinux/comments/2eo3qq/is_it_possible_to_get_qt_to_properly_use_gtk/
# See : https://wiki.archlinux.org/index.php/Uniform_look_for_Qt_and_GTK_applications#Using_a_GTK.2B_icon_theme_in_Qt_apps
# The solution chosen here for consistent look between Qt and GTK applications is to use a same theme implemented
# in both native formats

- name: Load GTK2 configuration via .gtkrc-2.0
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.gtkrc-2.0"
    create: true
    block:  |
      # Load GTK2 configuration
      include "{{ remote_directory }}/files/gtkrc-2.0"

# /!\ This is a destructive operation /!\
# It does not seem possible to make an include in gtk3 config
# https://superuser.com/q/1370777/733026
- name: Load GTK3 configuration via .config/gtk-3.0/settings.ini
  file:
    dest:   "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
    src:    "{{ remote_directory }}/files/gtk-3.0-settings.ini"
    state:  link
    force:  true

# NB : Qt5 theme is loaded through QT_STYLE_OVERRIDE env variable
- name: Load Qt4 graphical configuration via .config/Trolltech.conf
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.config/Trolltech.conf"
    create: true
    block:  |
      # Set Qt4 Theme
      [Qt]
      style=Adwaita-Dark

- name: Load .profile
  blockinfile:
    dest:         "{{ ansible_user_dir }}/.profile"
    insertbefore: BOF
    create:       true
    block:  |
      # NB : This file must stay sh-compliant

      # Load global .profile
      . {{ remote_directory }}/files/profile

### i3 ###

- name: Create i3 config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/i3"

- name: Install i3 config (by symlinking)
  file:
    state:  link
    follow: false
    src:    "{{ remote_directory }}/files/i3_config"
    dest:   "{{ ansible_user_dir }}/.config/i3/config"

  # NB : If there is anything already configured in this file, our addition probably won't
  # change anything since it will likely be after an `exec`
- name: Allow starting X and i3 with the startx command
  blockinfile:
    dest:   "{{ ansible_user_dir }}/.xinitrc"
    create: true
    block: |
      # NB : This file must stay sh-compliant

      # Load very basic env (NB : this file is automatically sourced by gdm, not by startx)
      # Maybe we should ensure this is done in the tty shell directly (the one that executes startx)
      . "{{ ansible_user_dir }}/.profile"

      # Start i3
      exec i3

### sway ###

- name: Create sway config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/sway"

- name: Create sway config file
  template:
    src:    "sway_config"
    dest:   "{{ ansible_user_dir }}/.config/sway/config"


  # Insert emoji into any text field with rofi
- name: Install rofimoji
  pip:
    name: git+https://github.com/fdw/rofimoji
  become: true # We make a system install to be consistent with arch
  when: have_root and ( ansible_os_family == "Debian" or ansible_os_family == "RedHat" )
  # TODO : there is an arch package, add it somewhere

- name: Create systemd user units directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/systemd/user"

- name: Create ssh-agent unit file
  copy:
    src:    "ssh-agent.service"
    dest:   "{{ ansible_user_dir }}/.config/systemd/user/"

- name: Enable ssh-agent user unit
  systemd:
    name: ssh-agent.service
    enabled:  true
    state:    started
    scope:    user
    daemon_reload: true

- name: Create waybar config directory
  file:
    state:  directory
    dest:   "{{ ansible_user_dir }}/.config/waybar"

- name: Symlink waybar config
  file:
    state:  link
    src:    "{{ remote_directory }}/files/waybar_config"
    dest:   "{{ ansible_user_dir }}/.config/waybar/config"

- name: Download mediaplayer.py script
  get_url:
    url:  "https://raw.githubusercontent.com/Alexays/Waybar/master/resources/custom_modules/mediaplayer.py"
    dest: "{{ remote_directory }}/mediaplayer.py"
    mode: 0700

